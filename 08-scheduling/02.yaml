# Use affinity to ensure two Pods co-schedule on same node.

#pod1
apiVersion: v1
kind: Pod
metadata:
  name: myapp
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: nodeaffinity
            operator: In
            values:
            - affinity
            - affinity2

  containers:
  - name: nginx
    image: nginx

---
apiVersion: v1
kind: Pod
metadata:
  name: myapp2
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: nodeaffinity
            operator: In
            values:
            - affinity
            - affinity2

  containers:
  - name: nginx
    image: nginx

# NAME               READY   STATUS    RESTARTS   AGE   IP           NODE            NOMINATED NODE   READINESS GATES
# myapp              1/1     Running   0          47s   10.244.1.6   local-worker2   <none>           <none>
# myapp2             1/1     Running   0          47s   10.244.1.7   local-worker2   <none>           <none>